#!/usr/bin/env sh
#-*-mode: shell-mode; coding: utf-8;-*-
# Makes sure all is sourced in the proper order and sets up anything needed.
#
# The way I'm setting this up is that prefix needs to be set prior to getting
# sourced, otherwise this house of cards doesn't work.
#
# Order of sourcing is mostly boring.
#
# * First, sources basic files stored in ${HOME}/src TODO: find a way for ksh
#   to know where sourcing so I can remove this hardcoded nonsense
# * Then sources things in ${HOME}/site/local files (basically site dirs look like src/funcs)
#
# This allows site specific customization while keeping defaults simple.
#
# Other peculiarities include os-specific related setup.
#
# os-foo for example would get sourced after all those are sourced and we are
# running on a foo system (uname -s basically)
#
# After the generic os- is sourced, then the vendortype is sourced. This is so I
# can have Linux specific stuff in one place, then rhel/suse/arch/whatever
# separated.
#
# host-bar would get sourced if the current host's name is bar.
if [[ ${prefix:+1} == 1 ]]; then
  # HACK for TERM (a)buse, some profiles set TERM unconditionally.
  # keep what we get from ssh
  ORIG_TERM=${TERM}

  set -A load_order ${prefix}/src/funcs ${prefix}/site/local

  # load defaults, then site/local
  for load_prefix in ${load_order[*]}; do
    [[ ! -d ${load_prefix} ]] && break

    # load the bare files first
    for file in $(ls -d ${load_prefix}/* | grep -v sourceme); do
      [[ -f ${file} ]] && . ${file}
    done

    # TODO: Make this go somewhere else, total hack for now.
    echo $PATH | grep ${prefix}/src > /dev/null 2>&1
    [[ $? != 0 ]] && unshiftem "${prefix}/src"

    # Add in the bin dir if it exists to PATH
    unshiftem ${load_prefix}

    # then load os flavor/vendor files (sourced in with os for most funcs)
    flavor="${load_prefix}/oses/$(os_uname_s)"
    if [[ -f ${flavor} ]]; then
      . ${flavor}
    else
      echo '\e[91mWarning, unix flavor file not found@'${flavor}'\e[0m'
    fi

    vendor="${load_prefix}/oses/$(os_type)"
    if [[ -f ${vendor} ]]; then
      . ${vendor}
    else
      echo '\e[91mWarning, unix vendor file not found@'${vendor}'\e[0m'
    fi

    # And any host specific stuff (should only be in site/local
    hostname=$(host_name)
    hostnamefile="${load_prefix}/hosts/$(host_name)"
    [[ -f ${hostnamefile} ]] && source ${hostnamefile}
  done

  alias_setup
  stty -ixon
else
  echo "\e[91m\${prefix} not set. Refusing to do anything."
fi
